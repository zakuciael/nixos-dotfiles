{
	"Desktop Module": {
		"prefix": ["nix-desktop-module", "nixdm"],
		"description": "Generate a desktop Nix module",
		"scope": "nix",
		"isFileTemplate": true,
		"body": [
			"{",
			"  config,",
			"  lib,",
			"  pkgs,",
			"  inputs,",
			"  ...",
			"}:",
			"with lib;",
			"with lib.my; desktop.mkDesktopModule {",
			"  inherit config;",
			"",
			"  name = \"${1:example}\";",
			"  desktopApps = [${2}];",
			"",
			"  extraConfig = {",
			"    cfg,",
			"    autostartScript,",
			"    colorScheme,",
			"    ...",
			"  }: {",
			"    ${0}",
			"  };",
			"}"
		]
	},
	"App Module": {
		"prefix": ["nix-app-module", "nixam"],
		"description": "Generate a app Nix module",
		"scope": "nix",
		"isFileTemplate": true,
		"body": [
			"{",
			"  config,",
			"  lib,",
			"  pkgs,",
			"  username,",
			"  ...",
			"}:",
			"with lib;",
			"with lib.my; {",
			"  ${0}",
			"}"
		]
	},
	"Shell Tool": {
		"prefix": ["nix-tool", "nixt"],
		"description": "Generates a Shell Tool configuration",
		"scope": "nix",
		"isFileTemplate": true,
		"body": [
			"{username, ...}: {",
			"  home-manager.users.\\${username} = {",
			"    programs.${1:tool-name} = {",
			"      ${0}",
			"    };",
			"  };",
			"}"
		]
	},
	"Generic Module": {
		"prefix": ["nix-module", "nixm"],
		"description": "Generates a generic Nix module",
		"scope": "nix",
		"isFileTemplate": true,
		"body": [
			"{",
			"  config,",
			"  lib,",
			"  pkgs,",
			"  ...",
			"}:",
			"with lib;",
			"with lib.my; let",
			"  cfg = config.modules.${1:type}.${2:example};",
			"in {",
			"  options.modules.${1:type}.${2:example} = {",
			"    enable = mkEnableOption \"${3}\";${4}",
			"  };",
			"",
			"  config = mkIf (cfg.enable) {",
			"    ${0}",
			"  };",
			"}"
		]
	}
}