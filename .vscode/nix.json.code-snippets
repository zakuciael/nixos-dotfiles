{
	"Desktop Module": {
		"prefix": ["nix-desktop-module", "nixdm"],
		"description": "Generate a desktop Nix module",
		"scope": "nix",
		"isFileTemplate": true,
		"body": [
			"{",
			"\tpkgs,",
			"\tlib,",
			"\tconfig,",
			"\tinputs,",
			"\t...",
			"}:",
			"with lib;",
			"with lib.my; let",
			"\tcfg = config.modules.desktop.${1:example};",
			"\tdesktopApps = apps.desktopApps config cfg;",
			"in {",
			"\toptions.modules.desktop.${1:example} = {",
			"\t\tenable = mkEnableOption \"${2}\";",
			"\t};",
			"",
			"\tconfig = mkIf (cfg.enable) (mkMerge (with desktopApps; [",
			"\t\t${0}",
			"\t]));",
			"}\n"
		]
	},
	"Generic Module": {
		"prefix": ["nix-module", "nixm"],
		"description": "Generates a generic Nix module",
		"scope": "nix",
		"isFileTemplate": true,
		"body": [
			"{",
			"\tpkgs,",
			"\tlib,",
			"\tconfig,",
			"\t...",
			"}:",
			"with lib;",
			"with lib.my; let",
			"\tcfg = config.modules.${1:type}.${2:example};",
			"in {",
			"\toptions.modules.${1:type}.${2:example} = {",
			"\t\tenable = mkEnableOption \"${3}\";${4}",
			"\t};",
			"",
			"\tconfig = mkIf (cfg.enable) {",
			"\t\t${0}"
			"\t};"
			"}"
		]
	}
}